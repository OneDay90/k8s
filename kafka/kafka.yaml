apiVersion: v1
kind: Service
metadata:
  name: kafka-svc
  namespace: kafka
  labels:
    app: kafka
spec:
  ports:
  - port: 9092
    name: server
  clusterIP: None   #创建无头服务，如果需要对外暴露端口可自行创建service
  selector:
    app: kafka
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: kafka-pdb
  namespace: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  minAvailable: 2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-svc
  replicas: 3
  template:
    metadata:
      labels:
        app: kafka
    spec:
      affinity:
        #podAntiAffinity:
        #  requiredDuringSchedulingIgnoredDuringExecution:
        #    - labelSelector:
        #        matchExpressions:
        #          - key: "app"
        #            operator: In
        #            values: 
        #            - kafka
        #      topologyKey: "kubernetes.io/hostname"
        #podAffinity:
        #  preferredDuringSchedulingIgnoredDuringExecution:
        #     - weight: 1
        #       podAffinityTerm:
        #         labelSelector:
        #            matchExpressions:
        #              - key: "app"
        #                operator: In
        #                values: 
        #                - zk
        #         topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 300
      containers:
      - name: k8skafka
        imagePullPolicy: Always
        #image: registry.cn-hangzhou.aliyuncs.com/ccgg/k8skafka:v1  #可自行去阿里云拉去对应镜像
        #image: docker.st.dealmoon.net:5000/dm/kafka:latest  #可自行去阿里云拉去对应镜像
        image: docker.st.dealmoon.net:5000/dmk8s/devops-demo:73c19bc  #可自行去阿里云拉去对应镜像
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        ports:
        - containerPort: 9092
          name: server
        command:
        - sh
        - -c
        - "exec ./bin/kafka-server-start.sh ./config/server.properties --override broker.id=${HOSTNAME##*-} \   
          --override listeners=PLAINTEXT://:9092 \
          --override zookeeper.connect=zk-0.zk-hs.zookeeper-min.svc.cluster.local:2181,zk-1.zk-hs.zookeeper-min.svc.cluster.local:2181,zk-2.zk-hs.zookeeper-min.svc.cluster.local:2181 \   #这里配置了与zookeeper进行连接，非常重要。格式为：pod名.zookeeper的service名.名称空间.svc.cluster.local:2181
          --override log.dir=/tmp/kafka-logs "
        env:
        - name: KAFKA_HEAP_OPTS
          value : "-Xmx512M -Xms512M"
        - name: KAFKA_OPTS
          value: "-Dlogging.level=INFO"
        volumeMounts:
        - name: kafka-data
          mountPath: /tmp/kafka-logs
        readinessProbe:
          tcpSocket:
            port: 9092
          timeoutSeconds: 1
          initialDelaySeconds: 5
      #imagePullSecrets:
      #  - name: regsecret
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      accessModes: [ "ReadWriteMany" ]
      storageClassName: managed-nfs-storage   #需指定自己的动态存储类名
      resources:
        requests:
          storage: 5Gi
  updateStrategy:
    type: RollingUpdate
